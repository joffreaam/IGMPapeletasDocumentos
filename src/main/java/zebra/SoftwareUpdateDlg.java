/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SoftwareUpdateDlg.java
 *
 * Created on Jun 2, 2011, 10:44:45 PM
 */

package zebra;

import com.mot.rfid.api3.*;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;
import javax.swing.text.html.*;

/**
 *
 * @author CFRN78
 */
public class SoftwareUpdateDlg extends javax.swing.JDialog {

    SoftwareUpdateInfo softwareUpdateInfo;
    final static int interval = 1000;
    int progressBarValue;
    Timer timer;

    /** Creates new form SoftwareUpdateDlg */
    public SoftwareUpdateDlg(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        //Create a timer.
        timer = new Timer(interval, new ActionListener() {

            public void actionPerformed(ActionEvent evt) {
                if (progressBarValue == 100) {
                    //Toolkit.getDefaultToolkit().beep();
                    timer.stop();
                    jButtonStartUpdate.setEnabled(true);
                    jProgressBar1.setValue(0);
                    String str = "<html>" + "<font color=\"#FF0000\">" + "<b>" + "Software update completed." + "</b>" + "</font>" + "</html>";
                    jLabelStatus.setText(str);
                    return;
                }
                
                try {

                    UpdateStatus updateStatus = RFIDMainDlg.rfidBase.rm.getSoftwareUpdate().getUpdateStatus();
                    progressBarValue = updateStatus.getPercentage();
                    jProgressBar1.setValue(progressBarValue);
                    String str = "<html>" + "<font color=\"#008000\">" + "<b>" + updateStatus.getUpdateInfo().toString() + "</b>" + "</font>" + "</html>";
                    jLabelStatus.setText(str);

                } catch (InvalidUsageException ex) {
                    //ex.printStackTrace();
                } catch (OperationFailureException ex) {
                    //ex.printStackTrace();
                    String str = "<html>" + "<font color=\"#008000\">" + "<b>" + "Software update is in process......." + "</b>" + "</font>" + "</html>";
                    jLabelStatus.setText(str);
                    if(ex.getResults() == RFIDResults.RFID_RM_NO_UPDATION_IN_PROGRESS)
                    {
                        //Toolkit.getDefaultToolkit().beep();
                        timer.stop();
                        jButtonStartUpdate.setEnabled(true);
                        jProgressBar1.setValue(0);
                        str = "<html>" + "<font color=\"#FF0000\">" + "<b>" + ex.getStatusDescription() + "</b>" + "</font>" + "</html>";
                        jLabelStatus.setText(str);
                        return;
                    }

                }

            }
        });

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jTextFieldLocation = new javax.swing.JTextField();
        jButtonStartUpdate = new javax.swing.JButton();
        jLabelStatus = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldUserName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPasswordField = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Software Update");
        setResizable(false);

        jLabel3.setText("Location");

        jButtonStartUpdate.setText("Start Update");
        jButtonStartUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartUpdateActionPerformed(evt);
            }
        });

        jProgressBar1.setStringPainted(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("FTP Info"));

        jLabel1.setText("User Name");

        jLabel2.setText("Password");

        jPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                    .addComponent(jTextFieldUserName, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldLocation, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(jButtonStartUpdate, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addComponent(jLabelStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonStartUpdate)
                .addGap(18, 18, 18)
                .addComponent(jLabelStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordFieldActionPerformed

    private void jButtonStartUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartUpdateActionPerformed

        softwareUpdateInfo = new SoftwareUpdateInfo();
        softwareUpdateInfo.setHostName(jTextFieldLocation.getText());
        softwareUpdateInfo.setUserName(jTextFieldUserName.getText());
        softwareUpdateInfo.setPassword(jPasswordField.getText());
        try {
            RFIDMainDlg.rfidBase.rm.getSoftwareUpdate().Update(softwareUpdateInfo);

            jButtonStartUpdate.setEnabled(false);
            progressBarValue = 0;
            String str = "<html>" + "<font color=\"#008000\">" + "<b>" + "Software update is in process......." + "</b>" + "</font>" + "</html>";
            jLabelStatus.setText(str);
            timer.start();

            RFIDMainDlg.rfidBase.postStatusNotification(RFIDBase.API_SUCCESS, null);

            } catch (InvalidUsageException ex) {
                RFIDMainDlg.rfidBase.postStatusNotification(RFIDBase.PARAM_ERROR, ex.getVendorMessage());
            } catch (OperationFailureException ex) {
                RFIDMainDlg.rfidBase.postStatusNotification(ex.getStatusDescription(), ex.getVendorMessage());
            }

    }//GEN-LAST:event_jButtonStartUpdateActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SoftwareUpdateDlg dialog = new SoftwareUpdateDlg(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonStartUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JTextField jTextFieldLocation;
    private javax.swing.JTextField jTextFieldUserName;
    // End of variables declaration//GEN-END:variables

}
